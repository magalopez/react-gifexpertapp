{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputCategorie","setInputCategory","onSubmit","e","preventDefault","type","onChange","value","target","onClick","categories","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","setTimeout","then","imgs","useFetchGifs","GifExpertApp","props","add","setAdd","setcategories","item","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACHC,mBAAS,IADN,mBACvCC,EADuC,KACvBC,EADuB,KAiB9C,OACE,gCACE,6BAAKD,IACL,uBAAME,SAPY,SAACC,GACrBA,EAAEC,kBAMA,UACE,uBAAOC,KAAK,OAAOC,SAlBK,SAACH,GAAO,IAC/BI,EAASJ,EAAEK,OAAXD,MACLN,EAAiBM,IAgBuCA,MAAOP,IAC3D,wBAAQS,QAdQ,SAACN,GAClBH,GAAgBF,GAAc,SAAAY,GAAU,OAAKV,GAAL,mBAAuBU,OAClET,EAAiB,KAYb,4B,+BCzBKU,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAClC,OACE,sBAAKc,UAAU,6BAAf,UACE,qBAAKA,UAAU,oBAAoBC,IAAKf,EAAKgB,IAAKN,IAClD,oBAAII,UAAU,oBAAd,SAAmCJ,QCD5BO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACfb,mBAAS,CAChCoB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WAERC,YAAW,WACTzB,EAAQC,GACLyB,MAAK,SAAAC,GAAI,OAAIJ,EAAS,CACrBf,KAAOmB,EACPN,SAAS,SAEZ,OAEH,CAACpB,IAEIqB,EDd0BM,CAAa3B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACE,qCACE,oBAAIJ,UAAU,sBAAd,SAAqChB,IAEpCoB,GAAW,4CAEZ,qBAAKJ,UAAU,wBAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEcjBiB,EA1BM,SAAAC,GAAU,IAAD,EACN1C,oBAAS,GADH,mBACrB2C,EADqB,KAChBC,EADgB,OAEQ5C,mBAAS,CAAC,cAFlB,mBAErBW,EAFqB,KAETkC,EAFS,KAQ5B,OACE,qCACE,gDACA,uBACA,wBAAQnC,QARa,WACvBkC,GAAQD,IAON,SAAqCA,EAAc,QAAR,QAC1CA,GAAO,cAAC,EAAD,CAAa5C,cAAe8C,IACpC,6BACGlC,EAAWW,KAAI,SAAAwB,GAAI,OAClB,cAAC,EAAD,CAAoBjC,SAAUiC,GAAhBA,Y,MChBxBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9693d9d3.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputCategorie, setInputCategory] = useState('');\r\n\r\n  const handlerInputCategorie = (e) => {\r\n    let {value} = e.target;\r\n    setInputCategory(value);\r\n  }\r\n\r\n  const saveCategorie = (e) => {\r\n    if(inputCategorie) setCategories(categories => [inputCategorie,...categories]);\r\n    setInputCategory('');\r\n  }\r\n\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{inputCategorie}</h2>\r\n      <form onSubmit={handlerSubmit}>\r\n        <input type=\"text\" onChange={handlerInputCategorie} value={inputCategorie}/>\r\n        <button onClick={saveCategorie}>Guardar</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=MUgmvXbI5dUp3DwSmCdMGnSxj6XRWZz1`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n  \r\n  return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n  return (\r\n    <div className=\"card-image animate__fadeIn\">\r\n      <img className=\"card-image__image\" src={url} alt={title}/>\r\n      <h2 className=\"card-image__title\">{title}</h2>\r\n    </div>\r\n  )\r\n}","// import React, {useState, useEffect} from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem}  from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__bounceInUp\">{category}</h3>\r\n\r\n      {loading && <p>Cargando...</p>}\r\n\r\n      <div className=\"container-card-images\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img}/>))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate]= useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(()=> {\r\n\r\n    setTimeout(() => {\r\n      getGifs(category)\r\n        .then(imgs => setstate({\r\n          data : imgs,\r\n          loading: false\r\n        }))\r\n    }, 3000);\r\n    \r\n  },[category])\r\n\r\n  return state;\r\n}\r\n","import React, {useState} from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n  const [add, setAdd] = useState(false);\r\n  const [categories, setcategories] = useState(['One Punch']);\r\n\r\n  const handlerButtomAdd = () => {\r\n    setAdd(!add)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif Expert App</h2>\r\n      <hr/>\r\n      <button onClick={handlerButtomAdd}>{!add ? 'Add' : 'Close'}</button>\r\n      {add && <AddCategory setCategories={setcategories} />}\r\n      <ol>\r\n        {categories.map(item => (\r\n          <GifGrid key={item} category={item}/>))}\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\n// GifExpertApp.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}